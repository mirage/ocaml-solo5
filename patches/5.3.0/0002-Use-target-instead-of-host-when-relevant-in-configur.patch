From 65a1ec131040e11b29564247b2b4535b8b4f0098 Mon Sep 17 00:00:00 2001
From: Samuel Hym <samuel@tarides.com>
Date: Tue, 9 Jul 2024 19:17:14 +0200
Subject: [PATCH 02/21] Use `target` instead of `host` when relevant in
 configuration

As the C toolchain being configured is generating code for `target`, use
`target` in every test that is done according to the toolchain.

Note that all these changes are transparent when `host` = `target`.
---
 aclocal.m4   |  12 ++---
 configure    | Bin 660523 -> 668791 bytes
 configure.ac | 142 +++++++++++++++++++++++++++------------------------
 3 files changed, 81 insertions(+), 73 deletions(-)

diff --git a/aclocal.m4 b/aclocal.m4
index 7353e09a96..242a0e6638 100644
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -369,27 +369,27 @@ AC_DEFUN([OCAML_TEST_WINPTHREADS_PTHREAD_H], [
   OCAML_CC_RESTORE_VARIABLES
 ])
 
-AC_DEFUN([OCAML_HOST_IS_EXECUTABLE], [
-  AC_MSG_CHECKING([whether host executables can be run in the build])
+AC_DEFUN([OCAML_TARGET_IS_EXECUTABLE], [
+  AC_MSG_CHECKING([whether target executables can be run in the build])
   old_cross_compiling="$cross_compiling"
   cross_compiling='no'
   AC_RUN_IFELSE(
     [AC_LANG_PROGRAM],
     [AC_MSG_RESULT([yes])
-    host_runnable=true],
+    target_runnable=true],
     [AC_MSG_RESULT([no])
-    host_runnable=false],
+    target_runnable=false],
     # autoconf displays a warning if this parameter is missing, but
     # cross-compilation mode was disabled above.
     [assert=false])
   cross_compiling="$old_cross_compiling"
 ])
 
-# This is AC_RUN_IFELSE but taking $host_runnable into account (i.e. if the
+# This is AC_RUN_IFELSE but taking $target_runnable into account (i.e. if the
 # program can be run, then it is run)
 AC_DEFUN([OCAML_RUN_IFELSE], [
   old_cross_compiling="$cross_compiling"
-  AS_IF([test "x$host_runnable" = 'xtrue'], [cross_compiling='no'])
+  AS_IF([test "x$target_runnable" = 'xtrue'], [cross_compiling='no'])
   AC_RUN_IFELSE([$1],[$2],[$3],[$4])
   cross_compiling="$old_cross_compiling"
 ])
diff --git a/configure b/configure
index e407887556..9ef0edf502 100755
--- a/configure
+++ b/configure
@@ -3727,7 +3727,7 @@ esac
 
 # Systems that are known not to work, even in bytecode only.
 
-case $host in #(
+case $target in #(
   i386-*-solaris*) :
     as_fn_error $? "Building for 32 bits target is not supported. \
 If your host is 64 bits, you can try with './configure CC=\"gcc -m64\"' \
@@ -3738,7 +3738,7 @@ esac
 
 # MSVC special case
 
-case $host in #(
+case $target in #(
   *-pc-windows) :
     if test -z "$CC"
 then :
@@ -4246,10 +4246,125 @@ else $as_nop
 
 fi
 
+# Are we building a cross-compiler
+
+if test x"$host" = x"$target"
+then :
+  cross_compiler=false
+else $as_nop
+  cross_compiler=true
+fi
+
 # Initialization of libtool
 # Allow the MSVC linker to be found even if ld isn't installed.
 # User-specified LD still takes precedence.
-if test -n "$ac_tool_prefix"; then
+if $cross_compiler
+then :
+  for ac_prog in ld link
+do
+  # Extract the first word of "$target_alias-$ac_prog", so it can be a program name with args.
+set dummy $target_alias-$ac_prog; ac_word=$2
+{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+printf %s "checking for $ac_word... " >&6; }
+if test ${ac_cv_prog_LD+y}
+then :
+  printf %s "(cached) " >&6
+else $as_nop
+  if test -n "$LD"; then
+  ac_cv_prog_LD="$LD" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  case $as_dir in #(((
+    '') as_dir=./ ;;
+    */) ;;
+    *) as_dir=$as_dir/ ;;
+  esac
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
+    ac_cv_prog_LD="$target_alias-$ac_prog"
+    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LD=$ac_cv_prog_LD
+if test -n "$LD"; then
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
+printf "%s\n" "$LD" >&6; }
+else
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
+printf "%s\n" "no" >&6; }
+fi
+
+
+  test -n "$LD" && break
+done
+if test -z "$LD"; then
+  if test "$build" = "$target"; then
+    ac_ct_LD=$LD
+    for ac_prog in ld link
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+printf %s "checking for $ac_word... " >&6; }
+if test ${ac_cv_prog_ac_ct_LD+y}
+then :
+  printf %s "(cached) " >&6
+else $as_nop
+  if test -n "$ac_ct_LD"; then
+  ac_cv_prog_ac_ct_LD="$ac_ct_LD" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  case $as_dir in #(((
+    '') as_dir=./ ;;
+    */) ;;
+    *) as_dir=$as_dir/ ;;
+  esac
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_LD="$ac_prog"
+    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_LD=$ac_cv_prog_ac_ct_LD
+if test -n "$ac_ct_LD"; then
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_LD" >&5
+printf "%s\n" "$ac_ct_LD" >&6; }
+else
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
+printf "%s\n" "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_LD" && break
+done
+test -n "$ac_ct_LD" || ac_ct_LD="false"
+
+    LD=$ac_ct_LD
+  else
+    LD="false"
+  fi
+fi
+
+else $as_nop
+  if test -n "$ac_tool_prefix"; then
   for ac_prog in ld link
   do
     # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
@@ -4359,6 +4474,7 @@ esac
   fi
 fi
 
+fi
 # libtool will detect a build-to-host C toolchain but when building an OCaml
 # cross compiler we need the C toolchain to build the target runtime so we
 # temporarily define host* values as macros for target* values so that the
@@ -13536,7 +13652,7 @@ else $as_nop
 fi ;;
 esac
 
-case $host in #(
+case $target in #(
   # In config/Makefile.mingw*, we had:
   # TARGET=i686-w64-mingw32 and x86_64-w64-mingw32
   # TOOLPREF=$(TARGET)-
@@ -13548,7 +13664,7 @@ case $host in #(
       mkexe_via_cc_extra_cmd=' && $(call MERGEMANIFESTEXE,$(1))'
       libext=lib
       AR=""
-      if test "$host_cpu" = "x86_64"
+      if test "$target_cpu" = "x86_64"
 then :
   machine="-machine:AMD64 "
 else $as_nop
@@ -13759,8 +13875,8 @@ printf "%s\n" "$ocaml_cc_vendor" >&6; }
 ## In cross-compilation mode, can we run executables produced?
 # At the moment, it's required, but the fact is used in C99 function detection
 
-  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host executables can be run in the build" >&5
-printf %s "checking whether host executables can be run in the build... " >&6; }
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether target executables can be run in the build" >&5
+printf %s "checking whether target executables can be run in the build... " >&6; }
   old_cross_compiling="$cross_compiling"
   cross_compiling='no'
   if test "$cross_compiling" = yes
@@ -13784,11 +13900,11 @@ if ac_fn_c_try_run "$LINENO"
 then :
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 printf "%s\n" "yes" >&6; }
-    host_runnable=true
+    target_runnable=true
 else $as_nop
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
 printf "%s\n" "no" >&6; }
-    host_runnable=false
+    target_runnable=false
 fi
 rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
   conftest.$ac_objext conftest.beam conftest.$ac_ext
@@ -13838,6 +13954,14 @@ esac
 ocamlsrcdir=$(unset CDPATH; cd -- "$srcdir" && printf %sX "$PWD") || fail
 ocamlsrcdir=${ocamlsrcdir%X}
 
+case $host in #(
+  *-*-mingw32*|*-pc-windows) :
+    ln='cp -pf'
+    ocamlsrcdir="$(LC_ALL=C.UTF-8 cygpath -w -- "$ocamlsrcdir")" ;; #(
+  *) :
+    ln='ln -sf' ;;
+esac
+
 # Whether ar supports @FILE arguments
 
 case $lt_cv_ar_at_file in #(
@@ -13847,23 +13971,20 @@ case $lt_cv_ar_at_file in #(
     ar_supports_response_files=true ;;
 esac
 
-# Libraries to build depending on the host
+# Libraries to build depending on the target
 
-case $host in #(
+case $target in #(
   *-*-mingw32*|*-pc-windows) :
     unix_or_win32="win32"
-    ln='cp -pf'
     ocamltest_libunix="Some false"
-    ocamlsrcdir="$(LC_ALL=C.UTF-8 cygpath -w -- "$ocamlsrcdir")"
     ocamlyacc_wstr_module="yacc/wstr" ;; #(
   *) :
     unix_or_win32="unix"
-  ln='ln -sf'
   ocamltest_libunix="Some true"
   ocamlyacc_wstr_module="" ;;
 esac
 
-case $host in #(
+case $target in #(
   *-*-cygwin*|*-*-mingw32*|*-pc-windows) :
     exeext=".exe" ;; #(
   *) :
@@ -13935,7 +14056,7 @@ shebangscripts=false
 launch_method='exe'
 if test "x$interpval" = "xyes"
 then :
-  case $host in #(
+  case $target in #(
   *-cygwin) :
     # Cygwin supports shebangs, which we use for the compiler itself, but
       # partially for legacy, and partially so that executables can be easily
@@ -13963,15 +14084,6 @@ fi
 ac_config_commands="$ac_config_commands shebang"
 
 
-# Are we building a cross-compiler
-
-if test x"$host" = x"$target"
-then :
-  cross_compiler=false
-else $as_nop
-  cross_compiler=true
-fi
-
 # Checks for programs
 
 ## Check for the C compiler: done by libtool
@@ -14100,7 +14212,7 @@ case $enable_warn_error,false in #(
      ;;
 esac
 
-case $host in #(
+case $target in #(
   *-*-mingw32*|*-pc-windows) :
     case $WINDOWS_UNICODE_MODE in #(
   ansi) :
@@ -14204,7 +14316,7 @@ fi
 esac
 
 # Enable SSE2 on x86 mingw to avoid using 80-bit registers.
-case $host in #(
+case $target in #(
   i686-*-mingw32*) :
     internal_cflags="$internal_cflags -mfpmath=sse -msse2" ;; #(
   *) :
@@ -14214,7 +14326,7 @@ esac
 # Use 64-bit file offset if possible
 # See also AC_SYS_LARGEFILE
 # Problem: flags are added to CC rather than CPPFLAGS
-case $host in #(
+case $target in #(
   *-*-mingw32*|*-pc-windows) :
      ;; #(
   *) :
@@ -14232,7 +14344,7 @@ esac
 if test x"$enable_shared" = "xno"
 then :
   supports_shared_libraries=false
-  case $host in #(
+  case $target in #(
   *-pc-windows|*-w64-mingw32*) :
     as_fn_error $? "Cannot build native Win32 with --disable-shared" "$LINENO" 5 ;; #(
   *) :
@@ -14244,7 +14356,7 @@ fi
 
 # Define flexlink chain and flags correctly for the different Windows ports
 flexlink_flags=''
-case $host in #(
+case $target in #(
   i686-*-cygwin) :
     flexdll_chain='cygwin'
     flexlink_flags='-merge-manifest -stack 16777216' ;; #(
@@ -14588,7 +14700,7 @@ fi
 
 fi
 
-case $have_flexdll_h,$supports_shared_libraries,$host in #(
+case $have_flexdll_h,$supports_shared_libraries,$target in #(
   no,true,*-*-cygwin*) :
     supports_shared_libraries=false
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: flexdll.h not found: shared library support disabled." >&5
@@ -14599,7 +14711,7 @@ printf "%s\n" "$as_me: WARNING: flexdll.h not found: shared library support disa
      ;;
 esac
 
-case $flexdll_source_dir,$supports_shared_libraries,$flexlink,$host in #(
+case $flexdll_source_dir,$supports_shared_libraries,$flexlink,$target in #(
   ,true,,*-*-cygwin*) :
     supports_shared_libraries=false
     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: flexlink not found: shared library support disabled." >&5
@@ -14612,7 +14724,7 @@ esac
 
 mkexe_cmd_exp="$CC"
 
-case $ocaml_cc_vendor,$host in #(
+case $ocaml_cc_vendor,$target in #(
   *,x86_64-*-darwin*) :
     oc_ldflags='-Wl,-no_compact_unwind';
     printf "%s\n" "#define HAS_ARCH_CODE32 1" >>confdefs.h
@@ -14634,7 +14746,7 @@ else $as_nop
 fi
     ostype="Cygwin" ;; #(
   *,*-*-mingw32*) :
-    case $host in #(
+    case $target in #(
   i686-*-*) :
     oc_dll_ldflags="-static-libgcc" ;; #(
   *) :
@@ -14999,7 +15111,7 @@ then :
 fi
 
 
-case $host in #(
+case $target in #(
   *-*-linux*) :
     ac_fn_c_check_header_compile "$LINENO" "linux/futex.h" "ac_cv_header_linux_futex_h" "$ac_includes_default"
 if test "x$ac_cv_header_linux_futex_h" = xyes
@@ -15858,7 +15970,7 @@ fi
 # Full support for thread local storage
 # macOS and MinGW-w64 have problems with thread local storage accessed from DLLs
 
-case $host in #(
+case $target in #(
   *-apple-darwin*|*-mingw32*|*-pc-windows) :
      ;; #(
   *) :
@@ -15879,7 +15991,7 @@ natdynlinkopts=""
 if test x"$enable_shared" != "xno"
 then :
   mkdll=''
-  case $host in #(
+  case $target in #(
   x86_64-apple-darwin*) :
     mkdll_flags=\
 '-shared -undefined dynamic_lookup -Wl,-no_compact_unwind -Wl,-w'
@@ -15910,7 +16022,7 @@ esac ;; #(
   *-*-linux*|*-*-freebsd[3-9]*|*-*-freebsd[1-9][0-9]*\
     |*-*-openbsd*|*-*-netbsd*|*-*-dragonfly*|*-*-gnu*|*-*-haiku*) :
     sharedlib_cflags="-fPIC"
-       case $ocaml_cc_vendor,$host in #(
+       case $ocaml_cc_vendor,$target in #(
   gcc-*,powerpc-*-linux*) :
     mkdll_flags='-shared -mbss-plt' ;; #(
   *,i[3456]86-*) :
@@ -15920,7 +16032,7 @@ esac ;; #(
   *) :
     mkdll_flags='-shared' ;;
 esac
-       case $host in #(
+       case $target in #(
   *-*-openbsd7.[3-9]|*-*-openbsd[89].*) :
     mkdll_flags="${mkdll_flags} -Wl,--no-execute-only" ;; #(
   *) :
@@ -15950,7 +16062,7 @@ fi
 # Make sure code sections in OCaml-generated executables are readable
 # (required for marshaling of function closures)
 
-case $host in #(
+case $target in #(
   *-*-openbsd7.[3-9]|*-*-openbsd[89].*) :
     oc_ldflags="$oc_ldflags -Wl,--no-execute-only"
      natdynlinkopts="$natdynlinkopts -Wl,--no-execute-only" ;; #(
@@ -15960,7 +16072,7 @@ esac
 
 # Disable control flow integrity
 
-case $host in #(
+case $target in #(
   *-*-openbsd7.[4-9]|*-*-openbsd[89].*) :
     oc_ldflags="$oc_ldflags -Wl,-z,nobtcfi"
      natdynlinkopts="$natdynlinkopts -Wl,-z,nobtcfi" ;; #(
@@ -15975,7 +16087,7 @@ natdynlink=false
 
 if test x"$supports_shared_libraries" = 'xtrue'
 then :
-  case "$host" in #(
+  case "$target" in #(
   *-*-cygwin*) :
     natdynlink=true ;; #(
   *-*-mingw32*) :
@@ -16053,7 +16165,7 @@ case $enable_native_toplevel,$natdynlink in #(
 esac
 
 # Try to work around the Skylake/Kaby Lake processor bug.
-case "$ocaml_cc_vendor,$host" in #(
+case "$ocaml_cc_vendor,$target" in #(
   *gcc*,x86_64-*|*gcc*,i686-*) :
     as_CACHEVAR=`printf "%s\n" "ax_cv_check_cflags_$warn_error_flag_-fno-tree-vrp" | $as_tr_sh`
 { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts -fno-tree-vrp" >&5
@@ -16183,7 +16295,7 @@ system=unknown
 # preserving $arch = 'none' <=> $system = 'unknown'
 has_native_backend=no
 native_ldflags=""
-case $host in #(
+case $target in #(
   i[3456]86-*-linux*) :
     arch=i386; system=linux ;; #(
   i[3456]86-*-freebsd*) :
@@ -16350,7 +16462,105 @@ fi
 printf "%s\n" "#define OCAML_OS_TYPE \"$ostype\"" >>confdefs.h
 
 
-if test -n "$ac_tool_prefix"; then
+if $cross_compiler
+then :
+  # Extract the first word of "$target_alias-ld", so it can be a program name with args.
+set dummy $target_alias-ld; ac_word=$2
+{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+printf %s "checking for $ac_word... " >&6; }
+if test ${ac_cv_prog_DIRECT_LD+y}
+then :
+  printf %s "(cached) " >&6
+else $as_nop
+  if test -n "$DIRECT_LD"; then
+  ac_cv_prog_DIRECT_LD="$DIRECT_LD" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  case $as_dir in #(((
+    '') as_dir=./ ;;
+    */) ;;
+    *) as_dir=$as_dir/ ;;
+  esac
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
+    ac_cv_prog_DIRECT_LD="$target_alias-ld"
+    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DIRECT_LD=$ac_cv_prog_DIRECT_LD
+if test -n "$DIRECT_LD"; then
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DIRECT_LD" >&5
+printf "%s\n" "$DIRECT_LD" >&6; }
+else
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
+printf "%s\n" "no" >&6; }
+fi
+
+
+if test -z "$ac_cv_prog_DIRECT_LD"; then
+  if test "$build" = "$target"; then
+    ac_ct_DIRECT_LD=$DIRECT_LD
+    # Extract the first word of "ld", so it can be a program name with args.
+set dummy ld; ac_word=$2
+{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+printf %s "checking for $ac_word... " >&6; }
+if test ${ac_cv_prog_ac_ct_DIRECT_LD+y}
+then :
+  printf %s "(cached) " >&6
+else $as_nop
+  if test -n "$ac_ct_DIRECT_LD"; then
+  ac_cv_prog_ac_ct_DIRECT_LD="$ac_ct_DIRECT_LD" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  case $as_dir in #(((
+    '') as_dir=./ ;;
+    */) ;;
+    *) as_dir=$as_dir/ ;;
+  esac
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_DIRECT_LD="ld"
+    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_prog_ac_ct_DIRECT_LD" && ac_cv_prog_ac_ct_DIRECT_LD="false"
+fi
+fi
+ac_ct_DIRECT_LD=$ac_cv_prog_ac_ct_DIRECT_LD
+if test -n "$ac_ct_DIRECT_LD"; then
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DIRECT_LD" >&5
+printf "%s\n" "$ac_ct_DIRECT_LD" >&6; }
+else
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
+printf "%s\n" "no" >&6; }
+fi
+
+    DIRECT_LD=$ac_ct_DIRECT_LD
+  else
+    DIRECT_LD="false"
+  fi
+else
+  DIRECT_LD="$ac_cv_prog_DIRECT_LD"
+fi
+
+else $as_nop
+  if test -n "$ac_tool_prefix"; then
   # Extract the first word of "${ac_tool_prefix}ld", so it can be a program name with args.
 set dummy ${ac_tool_prefix}ld; ac_word=$2
 { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
@@ -16452,9 +16662,10 @@ else
   DIRECT_LD="$ac_cv_prog_DIRECT_LD"
 fi
 
+fi
 if test -z "$PARTIALLD"
 then :
-  case "$host,$ocaml_cc_vendor" in #(
+  case "$target,$ocaml_cc_vendor" in #(
   x86_64-*-darwin*,gcc-*) :
     PACKLD_FLAGS=' -arch x86_64' ;; #(
   powerpc64le*-*-linux*,gcc-*) :
@@ -16501,7 +16712,7 @@ case $arch in #(
     # ocamlopt generates PIC code or doesn't generate code at all
      ;; #(
   *) :
-    case $host in #(
+    case $target in #(
   # expected to match "*-linux-musl" as well as "*-linux-musleabi*"
     *-linux-musl*) :
     # Alpine and other musl-based Linux distributions
@@ -16704,7 +16915,7 @@ then :
 printf %s "checking whether round works... " >&6; }
 
   old_cross_compiling="$cross_compiling"
-  if test "x$host_runnable" = 'xtrue'
+  if test "x$target_runnable" = 'xtrue'
 then :
   cross_compiling='no'
 fi
@@ -16776,7 +16987,7 @@ fi
 printf %s "checking whether fma works... " >&6; }
 
   old_cross_compiling="$cross_compiling"
-  if test "x$host_runnable" = 'xtrue'
+  if test "x$target_runnable" = 'xtrue'
 then :
   cross_compiling='no'
 fi
@@ -16937,7 +17148,7 @@ fi
 ## On Unix platforms, we check for the appropriate POSIX feature-test macros.
 ## On MacOS clock_gettime's CLOCK_MONOTONIC flag is not actually monotonic.
 
-case $host in #(
+case $target in #(
   *-*-windows) :
     has_monotonic_clock=true ;; #(
   *-apple-darwin*) :
@@ -17000,7 +17211,7 @@ esac
 if test "x$enable_instrumented_runtime" != "xno"
 then :
 
-    case $host in #(
+    case $target in #(
   sparc-sun-solaris*) :
     instrumented_runtime=false ;; #(
   *-*-windows) :
@@ -17386,7 +17597,7 @@ fi
 
 sockets=true
 
-case $host in #(
+case $target in #(
   *-*-mingw32*) :
     cclibs="$cclibs -lws2_32"
     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for library containing socket" >&5
@@ -17734,7 +17945,7 @@ fi
 
 ## socklen_t
 
-case $host in #(
+case $target in #(
   *-*-mingw32*|*-pc-windows) :
     ac_fn_c_check_type "$LINENO" "socklen_t" "ac_cv_type_socklen_t" "#include <ws2tcpip.h>
 "
@@ -17765,7 +17976,7 @@ fi
 
 ## Unix domain sockets support on Windows
 
-case $host in #(
+case $target in #(
   *-*-mingw32*|*-pc-windows) :
            for ac_header in afunix.h
 do :
@@ -17787,7 +17998,7 @@ esac
 
 ipv6=true
 
-case $host in #(
+case $target in #(
   *-*-mingw32*|*-pc-windows) :
     ac_fn_c_check_type "$LINENO" "struct sockaddr_in6" "ac_cv_type_struct_sockaddr_in6" "#include <ws2tcpip.h>
 "
@@ -17885,7 +18096,7 @@ fi
 ## Note: this was defined in config/s-nt.h but the autoconf macros do not
 # seem to detect it properly on Windows so we hardcode the definition
 # of HAS_UTIME on Windows but this will probably need to be clarified
-case $host in #(
+case $target in #(
   *-*-mingw32*|*-pc-windows) :
     printf "%s\n" "#define HAS_UTIME 1" >>confdefs.h
  ;; #(
@@ -18100,7 +18311,7 @@ fi
 ## gethostname
 # Note: detection fails on Windows so hardcoding the result
 # (should be debugged later)
-case $host in #(
+case $target in #(
   *-*-mingw32*|*-pc-windows) :
     printf "%s\n" "#define HAS_GETHOSTNAME 1" >>confdefs.h
  ;; #(
@@ -18156,7 +18367,7 @@ fi
 
 ## setsid
 
-case $host in #(
+case $target in #(
   *-cygwin|*-*-mingw32*|*-pc-windows) :
      ;; #(
   *) :
@@ -18197,7 +18408,7 @@ fi
 ## newlocale() and <locale.h>
 # Note: the detection fails on msvc so we hardcode the result
 # (should be debugged later)
-case $host in #(
+case $target in #(
   *-pc-windows) :
     printf "%s\n" "#define HAS_LOCALE_H 1" >>confdefs.h
  ;; #(
@@ -18252,7 +18463,7 @@ fi
 ## strtod_l
 # Note: not detected on MSVC so hardcoding the result
 # (should be debugged later)
-case $host in #(
+case $target in #(
   *-pc-windows) :
     printf "%s\n" "#define HAS_STRTOD_L 1" >>confdefs.h
  ;; #(
@@ -18269,7 +18480,7 @@ esac
 ## shared library support
 if $supports_shared_libraries
 then :
-  case $host in #(
+  case $target in #(
   *-*-mingw32*|*-pc-windows|*-*-cygwin*) :
     DLLIBS="" ;; #(
   *) :
@@ -18369,7 +18580,7 @@ fi
 
 
 ## -fdebug-prefix-map support by the C compiler
-case $ocaml_cc_vendor,$host in #(
+case $ocaml_cc_vendor,$target in #(
   *,*-*-mingw32*) :
     cc_has_debug_prefix_map=false ;; #(
   *,*-pc-windows) :
@@ -18985,7 +19196,111 @@ fi
 fi
 
 
-if test -n "$ac_tool_prefix"; then
+if $cross_compiler
+then :
+  # Extract the first word of "$target_alias-pkg-config", so it can be a program name with args.
+set dummy $target_alias-pkg-config; ac_word=$2
+{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+printf %s "checking for $ac_word... " >&6; }
+if test ${ac_cv_path_PKG_CONFIG+y}
+then :
+  printf %s "(cached) " >&6
+else $as_nop
+  case $PKG_CONFIG in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_PKG_CONFIG="$PKG_CONFIG" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  case $as_dir in #(((
+    '') as_dir=./ ;;
+    */) ;;
+    *) as_dir=$as_dir/ ;;
+  esac
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
+    ac_cv_path_PKG_CONFIG="$as_dir$ac_word$ac_exec_ext"
+    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+PKG_CONFIG=$ac_cv_path_PKG_CONFIG
+if test -n "$PKG_CONFIG"; then
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PKG_CONFIG" >&5
+printf "%s\n" "$PKG_CONFIG" >&6; }
+else
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
+printf "%s\n" "no" >&6; }
+fi
+
+
+if test -z "$ac_cv_path_PKG_CONFIG"; then
+  if test "$build" = "$target"; then
+    ac_pt_PKG_CONFIG=$PKG_CONFIG
+    # Extract the first word of "pkg-config", so it can be a program name with args.
+set dummy pkg-config; ac_word=$2
+{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+printf %s "checking for $ac_word... " >&6; }
+if test ${ac_cv_path_ac_pt_PKG_CONFIG+y}
+then :
+  printf %s "(cached) " >&6
+else $as_nop
+  case $ac_pt_PKG_CONFIG in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_ac_pt_PKG_CONFIG="$ac_pt_PKG_CONFIG" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  case $as_dir in #(((
+    '') as_dir=./ ;;
+    */) ;;
+    *) as_dir=$as_dir/ ;;
+  esac
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
+    ac_cv_path_ac_pt_PKG_CONFIG="$as_dir$ac_word$ac_exec_ext"
+    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_path_ac_pt_PKG_CONFIG" && ac_cv_path_ac_pt_PKG_CONFIG="false"
+  ;;
+esac
+fi
+ac_pt_PKG_CONFIG=$ac_cv_path_ac_pt_PKG_CONFIG
+if test -n "$ac_pt_PKG_CONFIG"; then
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_pt_PKG_CONFIG" >&5
+printf "%s\n" "$ac_pt_PKG_CONFIG" >&6; }
+else
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
+printf "%s\n" "no" >&6; }
+fi
+
+    PKG_CONFIG=$ac_pt_PKG_CONFIG
+  else
+    PKG_CONFIG="false"
+  fi
+else
+  PKG_CONFIG="$ac_cv_path_PKG_CONFIG"
+fi
+
+else $as_nop
+  if test -n "$ac_tool_prefix"; then
   # Extract the first word of "${ac_tool_prefix}pkg-config", so it can be a program name with args.
 set dummy ${ac_tool_prefix}pkg-config; ac_word=$2
 { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
@@ -19093,6 +19408,7 @@ else
   PKG_CONFIG="$ac_cv_path_PKG_CONFIG"
 fi
 
+fi
 
 ## ZSTD compression library
 
@@ -19254,9 +19570,9 @@ fi
 # library available, but not have the DLL in PATH. This then causes the build to
 # fail as soon as ocamlrun is first executed. This check avoids automatically
 # enabling zstd when the resulting executable doesn't actually work.
-case $host in #(
+case $target in #(
   *-w64-mingw32*|*-pc-windows) :
-    check_zstd_runs=$host_runnable ;; #(
+    check_zstd_runs=$target_runnable ;; #(
   *) :
     check_zstd_runs=false ;;
 esac
@@ -19390,7 +19706,7 @@ esac
 
 ## Determine how to link with the POSIX threads library
 
-case $host in #(
+case $target in #(
   *-*-mingw32*) :
     link_gcc_eh=''
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for printf in -lgcc_eh" >&5
@@ -20300,7 +20616,7 @@ as_has_debug_prefix_map=false
 asm_cfi_supported=false
 if $native_compiler
 then :
-  case $host in #(
+  case $target in #(
   *-*-mingw32*|*-pc-windows) :
      ;; #(
   *) :
@@ -20473,7 +20789,7 @@ fi
 
 if test x"$enable_frame_pointers" = "xyes"
 then :
-  case $host in #(
+  case $target in #(
   x86_64-*-linux*|x86_64-*-darwin*) :
     case $ocaml_cc_vendor in #(
   clang-*|gcc-*) :
@@ -20918,7 +21234,7 @@ native_cflags="$native_cflags $PTHREAD_CFLAGS $COMPILER_NATIVE_CFLAGS"
 bytecode_cppflags="$common_cppflags $COMPILER_BYTECODE_CPPFLAGS"
 native_cppflags="$common_cppflags $COMPILER_NATIVE_CPPFLAGS"
 
-case $host in #(
+case $target in #(
   *-*-mingw32*) :
     cclibs="$cclibs -lole32 -luuid -lversion -lshlwapi -lsynchronization" ;; #(
   *-pc-windows) :
@@ -20958,22 +21274,18 @@ then :
      ;;
 esac
 else $as_nop
-  if test x"$unix_or_win32" = "xwin32" \
-          && test "$host_vendor-$host_os" != "$build_vendor-$build_os"
-then :
-  case $build in #(
-  *-pc-cygwin) :
+  case $build,$host in #(
+  *-pc-cygwin,*-*-mingw32*|*-pc-cygwin,*-pc-windows) :
     prefix="$(LC_ALL=C.UTF-8 cygpath -m "$prefix")" ;; #(
   *) :
      ;;
 esac
 fi
-fi
 
 # Define a few macros that were defined in config/m-nt.h
 # but whose value is not guessed properly by configure
 # (all this should be understood and fixed)
-case $host in #(
+case $target in #(
   *-*-mingw32*) :
     printf "%s\n" "#define HAS_BROKEN_PRINTF 1" >>confdefs.h
 
diff --git a/configure.ac b/configure.ac
index 18b0681d26..75429a8b34 100644
--- a/configure.ac
+++ b/configure.ac
@@ -318,7 +318,7 @@ AS_CASE([$host],
 
 # Systems that are known not to work, even in bytecode only.
 
-AS_CASE([$host],
+AS_CASE([$target],
   [i386-*-solaris*],
     [AC_MSG_ERROR([Building for 32 bits target is not supported. \
 If your host is 64 bits, you can try with './configure CC="gcc -m64"' \
@@ -326,7 +326,7 @@ If your host is 64 bits, you can try with './configure CC="gcc -m64"' \
 
 # MSVC special case
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-pc-windows],
     [AS_IF([test -z "$CC"], [CC=cl])
     ccomptype=msvc
@@ -619,10 +619,19 @@ AS_IF([test x"$enable_ocamldoc" = "xno"],
   optional_libraries="$optional_libraries ocamldoc/odoc_info"
   AC_CONFIG_FILES([ocamldoc/META])])
 
+# Are we building a cross-compiler
+
+AS_IF(
+  [test x"$host" = x"$target"],
+    [cross_compiler=false],
+    [cross_compiler=true])
+
 # Initialization of libtool
 # Allow the MSVC linker to be found even if ld isn't installed.
 # User-specified LD still takes precedence.
-AC_CHECK_TOOLS([LD],[ld link])
+AS_IF([$cross_compiler],
+  [AC_CHECK_TARGET_TOOLS([LD],[ld link],[false])],
+  [AC_CHECK_TOOLS([LD],[ld link])])
 # libtool will detect a build-to-host C toolchain but when building an OCaml
 # cross compiler we need the C toolchain to build the target runtime so we
 # temporarily define host* values as macros for target* values so that the
@@ -672,7 +681,7 @@ AS_CASE([$enable_dependency_generation],
       [compute_deps=true])],
     [compute_deps=false])])
 
-AS_CASE([$host],
+AS_CASE([$target],
   # In config/Makefile.mingw*, we had:
   # TARGET=i686-w64-mingw32 and x86_64-w64-mingw32
   # TOOLPREF=$(TARGET)-
@@ -684,7 +693,7 @@ AS_CASE([$host],
       mkexe_via_cc_extra_cmd=' && $(call MERGEMANIFESTEXE,$(1))'
       libext=lib
       AR=""
-      AS_IF([test "$host_cpu" = "x86_64" ],
+      AS_IF([test "$target_cpu" = "x86_64" ],
         [machine="-machine:AMD64 "],
         [machine=""])
       mklib="link -lib -nologo $machine /out:\$(1) \$(2)"
@@ -698,7 +707,7 @@ OCAML_CC_VENDOR
 
 ## In cross-compilation mode, can we run executables produced?
 # At the moment, it's required, but the fact is used in C99 function detection
-OCAML_HOST_IS_EXECUTABLE
+OCAML_TARGET_IS_EXECUTABLE
 
 # Determine how to call the C preprocessor directly.
 # Most of the time, calling the C preprocessor through the C compiler is
@@ -739,27 +748,30 @@ AS_CASE([$ocaml_cc_vendor],
 ocamlsrcdir=$(unset CDPATH; cd -- "$srcdir" && printf %sX "$PWD") || fail
 ocamlsrcdir=${ocamlsrcdir%X}
 
+AS_CASE([$host],
+  [*-*-mingw32*|*-pc-windows],
+    [ln='cp -pf'
+    ocamlsrcdir="$(LC_ALL=C.UTF-8 cygpath -w -- "$ocamlsrcdir")"],
+  [ln='ln -sf'])
+
 # Whether ar supports @FILE arguments
 
 AS_CASE([$lt_cv_ar_at_file],
   [no], [ar_supports_response_files=false],
   [ar_supports_response_files=true])
 
-# Libraries to build depending on the host
+# Libraries to build depending on the target
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*|*-pc-windows],
     [unix_or_win32="win32"
-    ln='cp -pf'
     ocamltest_libunix="Some false"
-    ocamlsrcdir="$(LC_ALL=C.UTF-8 cygpath -w -- "$ocamlsrcdir")"
     ocamlyacc_wstr_module="yacc/wstr"],
   [unix_or_win32="unix"
-  ln='ln -sf'
   ocamltest_libunix="Some true"
   ocamlyacc_wstr_module=""])
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-cygwin*|*-*-mingw32*|*-pc-windows],
     [exeext=".exe"],
   [exeext=''])
@@ -804,7 +816,7 @@ AC_SYS_INTERPRETER
 shebangscripts=false
 launch_method='exe'
 AS_IF([test "x$interpval" = "xyes"],
-  [AS_CASE([$host],
+  [AS_CASE([$target],
     [*-cygwin],
       [# Cygwin supports shebangs, which we use for the compiler itself, but
       # partially for legacy, and partially so that executables can be easily
@@ -838,13 +850,6 @@ dnl nefarious single quotes which may appear in any of the strings.
   ocaml_bindir='$(echo "$ocaml_bindir" | sed -e "s/'/'\"'\"'/g")'
   target_bindir='$(echo "$target_bindir" | sed -e "s/'/'\"'\"'/g")'])
 
-# Are we building a cross-compiler
-
-AS_IF(
-  [test x"$host" = x"$target"],
-    [cross_compiler=false],
-    [cross_compiler=true])
-
 # Checks for programs
 
 ## Check for the C compiler: done by libtool
@@ -890,7 +895,7 @@ AS_CASE([$enable_warn_error,OCAML__DEVELOPMENT_VERSION],
   [yes,*|,true],
     [cc_warnings="$cc_warnings $warn_error_flag"])
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*|*-pc-windows],
     [AS_CASE([$WINDOWS_UNICODE_MODE],
       [ansi],
@@ -952,14 +957,14 @@ AS_CASE([$ocaml_cc_vendor],
   [common_cflags="-O"])
 
 # Enable SSE2 on x86 mingw to avoid using 80-bit registers.
-AS_CASE([$host],
+AS_CASE([$target],
   [i686-*-mingw32*],
     [internal_cflags="$internal_cflags -mfpmath=sse -msse2"])
 
 # Use 64-bit file offset if possible
 # See also AC_SYS_LARGEFILE
 # Problem: flags are added to CC rather than CPPFLAGS
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*|*-pc-windows], [],
   [common_cppflags="$common_cppflags -D_FILE_OFFSET_BITS=64"])
 
@@ -973,14 +978,14 @@ AS_CASE([$host],
 
 AS_IF([test x"$enable_shared" = "xno"],
   [supports_shared_libraries=false
-  AS_CASE([$host],
+  AS_CASE([$target],
     [*-pc-windows|*-w64-mingw32*],
     [AC_MSG_ERROR([Cannot build native Win32 with --disable-shared])])],
   [supports_shared_libraries=true])
 
 # Define flexlink chain and flags correctly for the different Windows ports
 flexlink_flags=''
-AS_CASE([$host],
+AS_CASE([$target],
   [i686-*-cygwin],
     [flexdll_chain='cygwin'
     flexlink_flags='-merge-manifest -stack 16777216'],
@@ -1070,14 +1075,14 @@ AS_IF([test x"$supports_shared_libraries" != 'xfalse'], [
   ])
 ])
 
-AS_CASE([$have_flexdll_h,$supports_shared_libraries,$host],
+AS_CASE([$have_flexdll_h,$supports_shared_libraries,$target],
  [no,true,*-*-cygwin*],
    [supports_shared_libraries=false
    AC_MSG_WARN([flexdll.h not found: shared library support disabled.])],
  [no,*,*-w64-mingw32*|no,*,*-pc-windows],
    [AC_MSG_ERROR([flexdll.h is required for native Win32])])
 
-AS_CASE([$flexdll_source_dir,$supports_shared_libraries,$flexlink,$host],
+AS_CASE([$flexdll_source_dir,$supports_shared_libraries,$flexlink,$target],
   [,true,,*-*-cygwin*],
     [supports_shared_libraries=false
     AC_MSG_WARN([flexlink not found: shared library support disabled.])],
@@ -1086,7 +1091,7 @@ AS_CASE([$flexdll_source_dir,$supports_shared_libraries,$flexlink,$host],
 
 mkexe_cmd_exp="$CC"
 
-AS_CASE([$ocaml_cc_vendor,$host],
+AS_CASE([$ocaml_cc_vendor,$target],
   [*,x86_64-*-darwin*],
     [oc_ldflags='-Wl,-no_compact_unwind';
     AC_DEFINE([HAS_ARCH_CODE32], [1])],
@@ -1103,7 +1108,7 @@ AS_CASE([$ocaml_cc_vendor,$host],
     )
     ostype="Cygwin"],
   [*,*-*-mingw32*],
-    [AS_CASE([$host],
+    [AS_CASE([$target],
       [i686-*-*], [oc_dll_ldflags="-static-libgcc"])
     ostype="Win32"
     toolchain="mingw"
@@ -1198,7 +1203,7 @@ AC_CHECK_HEADER([sys/select.h], [AC_DEFINE([HAS_SYS_SELECT_H], [1])], [],
 
 AC_CHECK_HEADER([sys/mman.h], [AC_DEFINE([HAS_SYS_MMAN_H], [1])])
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-linux*],
     [AC_CHECK_HEADER([linux/futex.h], [AC_DEFINE([HAS_LINUX_FUTEX_H])])])
 
@@ -1295,7 +1300,7 @@ AS_IF([! $cc_supports_atomic],
 # Full support for thread local storage
 # macOS and MinGW-w64 have problems with thread local storage accessed from DLLs
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-apple-darwin*|*-mingw32*|*-pc-windows], [],
   [AC_DEFINE([HAS_FULL_THREAD_VARIABLES], [1])]
 )
@@ -1311,7 +1316,7 @@ natdynlinkopts=""
 
 AS_IF([test x"$enable_shared" != "xno"],
   [mkdll=''
-  AS_CASE([$host],
+  AS_CASE([$target],
     [x86_64-apple-darwin*],
       [mkdll_flags=\
 '-shared -undefined dynamic_lookup -Wl,-no_compact_unwind -Wl,-w'
@@ -1339,7 +1344,7 @@ AS_IF([test x"$enable_shared" != "xno"],
     [[*-*-linux*|*-*-freebsd[3-9]*|*-*-freebsd[1-9][0-9]*\
     |*-*-openbsd*|*-*-netbsd*|*-*-dragonfly*|*-*-gnu*|*-*-haiku*]],
       [sharedlib_cflags="-fPIC"
-       AS_CASE([$ocaml_cc_vendor,$host],
+       AS_CASE([$ocaml_cc_vendor,$target],
          [gcc-*,powerpc-*-linux*],
            [mkdll_flags='-shared -mbss-plt'],
          [[*,i[3456]86-*]],
@@ -1347,7 +1352,7 @@ AS_IF([test x"$enable_shared" != "xno"],
            # See https://github.com/ocaml/ocaml/issues/9800
            [mkdll_flags='-shared -Wl,-z,notext'],
          [mkdll_flags='-shared'])
-       AS_CASE([$host],
+       AS_CASE([$target],
          [[*-*-openbsd7.[3-9]|*-*-openbsd[89].*]],
            [mkdll_flags="${mkdll_flags} -Wl,--no-execute-only"])
       oc_ldflags="$oc_ldflags -Wl,-E"
@@ -1367,14 +1372,14 @@ AS_IF([test -z "$mkmaindll"],
 # Make sure code sections in OCaml-generated executables are readable
 # (required for marshaling of function closures)
 
-AS_CASE([$host],
+AS_CASE([$target],
   [[*-*-openbsd7.[3-9]|*-*-openbsd[89].*]],
     [oc_ldflags="$oc_ldflags -Wl,--no-execute-only"
      natdynlinkopts="$natdynlinkopts -Wl,--no-execute-only"])
 
 # Disable control flow integrity
 
-AS_CASE([$host],
+AS_CASE([$target],
   [[*-*-openbsd7.[4-9]|*-*-openbsd[89].*]],
     [oc_ldflags="$oc_ldflags -Wl,-z,nobtcfi"
      natdynlinkopts="$natdynlinkopts -Wl,-z,nobtcfi"])
@@ -1385,7 +1390,7 @@ AS_CASE([$host],
 natdynlink=false
 
 AS_IF([test x"$supports_shared_libraries" = 'xtrue'],
-  [AS_CASE(["$host"],
+  [AS_CASE(["$target"],
     [*-*-cygwin*], [natdynlink=true],
     [*-*-mingw32*], [natdynlink=true],
     [*-pc-windows], [natdynlink=true],
@@ -1427,7 +1432,7 @@ AS_CASE([$enable_native_toplevel,$natdynlink],
   [install_ocamlnat=false])
 
 # Try to work around the Skylake/Kaby Lake processor bug.
-AS_CASE(["$ocaml_cc_vendor,$host"],
+AS_CASE(["$ocaml_cc_vendor,$target"],
   [*gcc*,x86_64-*|*gcc*,i686-*],
     [AX_CHECK_COMPILE_FLAG([-fno-tree-vrp],
       [internal_cflags="$internal_cflags -fno-tree-vrp"], [],
@@ -1449,7 +1454,7 @@ system=unknown
 # preserving $arch = 'none' <=> $system = 'unknown'
 has_native_backend=no
 native_ldflags=""
-AS_CASE([$host],
+AS_CASE([$target],
   [[i[3456]86-*-linux*]],
     [arch=i386; system=linux],
   [[i[3456]86-*-freebsd*]],
@@ -1587,9 +1592,11 @@ AS_IF([$natdynlink],
 
 AC_DEFINE_UNQUOTED([OCAML_OS_TYPE], ["$ostype"])
 
-AC_CHECK_TOOL([DIRECT_LD],[ld])
+AS_IF([$cross_compiler],
+  [AC_CHECK_TARGET_TOOL([DIRECT_LD],[ld],[false])],
+  [AC_CHECK_TOOL([DIRECT_LD],[ld])])
 AS_IF([test -z "$PARTIALLD"],
-  [AS_CASE(["$host,$ocaml_cc_vendor"],
+  [AS_CASE(["$target,$ocaml_cc_vendor"],
     [x86_64-*-darwin*,gcc-*], [PACKLD_FLAGS=' -arch x86_64'],
     [powerpc64le*-*-linux*,gcc-*], [PACKLD_FLAGS=' -m elf64lppc'],
     [powerpc*-*-linux*,gcc-*],
@@ -1624,7 +1631,7 @@ AS_CASE([$arch],
   [amd64|arm64|s390x|none],
     # ocamlopt generates PIC code or doesn't generate code at all
     [],
-  [AS_CASE([$host],
+  [AS_CASE([$target],
     # expected to match "*-linux-musl" as well as "*-linux-musleabi*"
     [*-linux-musl*],
       # Alpine and other musl-based Linux distributions
@@ -1742,7 +1749,7 @@ AC_CHECK_FUNC([issetugid], [AC_DEFINE([HAS_ISSETUGID], [1])])
 ## On Unix platforms, we check for the appropriate POSIX feature-test macros.
 ## On MacOS clock_gettime's CLOCK_MONOTONIC flag is not actually monotonic.
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-windows],
     [has_monotonic_clock=true],
   [*-apple-darwin*], [
@@ -1774,7 +1781,7 @@ AS_CASE([$host],
 # clock source is missing.
 AS_IF([test "x$enable_instrumented_runtime" != "xno" ],
   [
-    AS_CASE([$host],
+    AS_CASE([$target],
     [sparc-sun-solaris*],
       [instrumented_runtime=false],
     [*-*-windows],
@@ -1965,7 +1972,7 @@ AS_IF([$tsan],
 
 sockets=true
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*],
     [cclibs="$cclibs -lws2_32"
     AC_SEARCH_LIBS([socket], [ws2_32])
@@ -1993,7 +2000,7 @@ AS_IF([$sockets], [AC_DEFINE([HAS_SOCKETS], [1])])
 
 ## socklen_t
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*|*-pc-windows],
     [AC_CHECK_TYPE([socklen_t], [AC_DEFINE([HAS_SOCKLEN_T], [1])], [],
       [#include <ws2tcpip.h>])],
@@ -2004,7 +2011,7 @@ AC_CHECK_FUNC([inet_aton], [AC_DEFINE([HAS_INET_ATON], [1])])
 
 ## Unix domain sockets support on Windows
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*|*-pc-windows],
     [AC_CHECK_HEADERS([afunix.h], [AC_DEFINE([HAS_AFUNIX_H], [1])], [],
       [#include <winsock2.h>])])
@@ -2013,7 +2020,7 @@ AS_CASE([$host],
 
 ipv6=true
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*|*-pc-windows],
     [AC_CHECK_TYPE(
       [struct sockaddr_in6], [], [ipv6=false], [#include <ws2tcpip.h>])],
@@ -2047,7 +2054,7 @@ AC_CHECK_FUNC([system], [AC_DEFINE([HAS_SYSTEM], [1])])
 ## Note: this was defined in config/s-nt.h but the autoconf macros do not
 # seem to detect it properly on Windows so we hardcode the definition
 # of HAS_UTIME on Windows but this will probably need to be clarified
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*|*-pc-windows], [AC_DEFINE([HAS_UTIME], [1])],
   [AC_CHECK_HEADER([sys/types.h],
     [AC_CHECK_HEADER([utime.h],
@@ -2123,7 +2130,7 @@ AC_CHECK_FUNC([setitimer],
 ## gethostname
 # Note: detection fails on Windows so hardcoding the result
 # (should be debugged later)
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*|*-pc-windows], [AC_DEFINE([HAS_GETHOSTNAME], [1])],
   [AC_CHECK_FUNC([gethostname], [AC_DEFINE([HAS_GETHOSTNAME], [1])])])
 
@@ -2147,7 +2154,7 @@ AC_CHECK_FUNC([mktime], [AC_DEFINE([HAS_MKTIME], [1])])
 
 ## setsid
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-cygwin|*-*-mingw32*|*-pc-windows], [],
   [AC_CHECK_FUNC([setsid], [AC_DEFINE([HAS_SETSID], [1])])])
 
@@ -2163,7 +2170,7 @@ AC_CHECK_FUNC([setenv],
 ## newlocale() and <locale.h>
 # Note: the detection fails on msvc so we hardcode the result
 # (should be debugged later)
-AS_CASE([$host],
+AS_CASE([$target],
   [*-pc-windows], [AC_DEFINE([HAS_LOCALE_H], [1])],
   [AC_CHECK_HEADER([locale.h],
     [AC_CHECK_FUNC([newlocale],
@@ -2178,13 +2185,13 @@ AC_CHECK_HEADER([xlocale.h],
 ## strtod_l
 # Note: not detected on MSVC so hardcoding the result
 # (should be debugged later)
-AS_CASE([$host],
+AS_CASE([$target],
   [*-pc-windows], [AC_DEFINE([HAS_STRTOD_L], [1])],
   [AC_CHECK_FUNC([strtod_l], [AC_DEFINE([HAS_STRTOD_L], [1])])])
 
 ## shared library support
 AS_IF([$supports_shared_libraries],
-  [AS_CASE([$host],
+  [AS_CASE([$target],
     [*-*-mingw32*|*-pc-windows|*-*-cygwin*],
       [DLLIBS=""],
     [AC_CHECK_FUNC([dlopen],
@@ -2210,7 +2217,7 @@ AC_CHECK_HEADER([sys/mman.h],
 AC_CHECK_FUNC([pwrite], [AC_DEFINE([HAS_PWRITE], [1])])
 
 ## -fdebug-prefix-map support by the C compiler
-AS_CASE([$ocaml_cc_vendor,$host],
+AS_CASE([$ocaml_cc_vendor,$target],
   [*,*-*-mingw32*], [cc_has_debug_prefix_map=false],
   [*,*-pc-windows], [cc_has_debug_prefix_map=false],
   [xlc*,powerpc-ibm-aix*], [cc_has_debug_prefix_map=false],
@@ -2289,7 +2296,9 @@ AC_CHECK_HEADER([spawn.h],
   [AC_CHECK_FUNC([posix_spawn],
     [AC_CHECK_FUNC([posix_spawnp], [AC_DEFINE([HAS_POSIX_SPAWN], [1])])])])
 
-AC_PATH_TOOL([PKG_CONFIG], [pkg-config], [false])
+AS_IF([$cross_compiler],
+  [AC_PATH_TARGET_TOOL([PKG_CONFIG], [pkg-config], [false])],
+  [AC_PATH_TOOL([PKG_CONFIG], [pkg-config], [false])])
 
 ## ZSTD compression library
 
@@ -2320,9 +2329,9 @@ AS_IF([test x"$with_zstd" != "xno"],
 # library available, but not have the DLL in PATH. This then causes the build to
 # fail as soon as ocamlrun is first executed. This check avoids automatically
 # enabling zstd when the resulting executable doesn't actually work.
-AS_CASE([$host],
+AS_CASE([$target],
   [*-w64-mingw32*|*-pc-windows],
-    [check_zstd_runs=$host_runnable],
+    [check_zstd_runs=$target_runnable],
   [check_zstd_runs=false])
 
 AS_IF([test x"$zstd_status" = "xok"],[
@@ -2390,7 +2399,7 @@ AS_CASE([$enable_debug_runtime],
 
 ## Determine how to link with the POSIX threads library
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*],
     [link_gcc_eh=''
      AC_CHECK_LIB([gcc_eh], [printf], [link_gcc_eh="-lgcc_eh"])
@@ -2458,7 +2467,7 @@ AS_CASE([$enable_systhreads,$enable_unix_lib],
 as_has_debug_prefix_map=false
 asm_cfi_supported=false
 AS_IF([$native_compiler],
-  [AS_CASE([$host],
+  [AS_CASE([$target],
     [*-*-mingw32*|*-pc-windows], [],
     [OCAML_AS_HAS_DEBUG_PREFIX_MAP
     OCAML_AS_HAS_CFI_DIRECTIVES])])
@@ -2466,7 +2475,7 @@ AS_IF([$native_compiler],
 ## Frame pointers
 
 AS_IF([test x"$enable_frame_pointers" = "xyes"],
-  [AS_CASE([$host],
+  [AS_CASE([$target],
     [x86_64-*-linux*|x86_64-*-darwin*],
      [AS_CASE([$ocaml_cc_vendor],
         [clang-*|gcc-*],
@@ -2647,7 +2656,7 @@ native_cflags="$native_cflags $PTHREAD_CFLAGS $COMPILER_NATIVE_CFLAGS"
 bytecode_cppflags="$common_cppflags $COMPILER_BYTECODE_CPPFLAGS"
 native_cppflags="$common_cppflags $COMPILER_NATIVE_CPPFLAGS"
 
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*],
     [cclibs="$cclibs -lole32 -luuid -lversion -lshlwapi -lsynchronization"],
   [*-pc-windows],
@@ -2671,15 +2680,14 @@ AS_IF([test x"$prefix" = "xNONE"],
     [x86_64-w64-mingw32*], [prefix='C:/ocamlmgw64'],
     [i686-pc-windows], [prefix='C:/ocamlms'],
     [x86_64-pc-windows], [prefix='C:/ocamlms64'])],
-  [AS_IF([test x"$unix_or_win32" = "xwin32" \
-          && test "$host_vendor-$host_os" != "$build_vendor-$build_os" ],
-    [AS_CASE([$build],
-      [*-pc-cygwin], [prefix="$(LC_ALL=C.UTF-8 cygpath -m "$prefix")"])])])
+  [AS_CASE([$build,$host],
+    [*-pc-cygwin,*-*-mingw32*|*-pc-cygwin,*-pc-windows],
+      [prefix="$(LC_ALL=C.UTF-8 cygpath -m "$prefix")"])])
 
 # Define a few macros that were defined in config/m-nt.h
 # but whose value is not guessed properly by configure
 # (all this should be understood and fixed)
-AS_CASE([$host],
+AS_CASE([$target],
   [*-*-mingw32*],
     [AC_DEFINE([HAS_BROKEN_PRINTF], [1])
     AC_DEFINE([HAS_IPV6], [1])
-- 
2.47.2

