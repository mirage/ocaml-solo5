From d3827762c1226cb09b0b9947b8e148dd2e5f3cf4 Mon Sep 17 00:00:00 2001
From: Samuel Hym <samuel@tarides.com>
Date: Fri, 31 Jan 2025 18:25:06 +0100
Subject: [PATCH 16/21] Detect support for `.size` and `.type` assembler
 directives

Detect during `configure` whether the C compiler generates `.size` and
`.type` assembler directives
Set the result to true if and only if both directives are generated for
functions and the `.type` directive is generated for objects (directives
equivalent to `.size` could be used for a simple `int`); display a
warning if some of the three combinations appear but not all three
Define a macro in `m.h` and a configure variable so that OCaml can do as
cc does
---
 aclocal.m4          |  48 ++++++++++++++++++++++++++++++++++++++++++++
 configure           | Bin 706768 -> 709722 bytes
 configure.ac        |   2 ++
 runtime/caml/m.h.in |   5 +++++
 4 files changed, 55 insertions(+)

diff --git a/aclocal.m4 b/aclocal.m4
index 9c6feb1034..daf2f0ce5e 100644
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -550,6 +550,54 @@ AC_DEFUN([OCAML_WITH_NONEXECSTACK_NOTE],
     [with_nonexecstack_note=false])
 ])
 
+AC_DEFUN([OCAML_ASM_SIZE_TYPE_DIRECTIVES],
+  [AC_REQUIRE([AC_PROG_GREP])dnl
+  AC_CACHE_CHECK([if $CC generates .size and .type asm directives],
+    [ocaml_cv_prog_cc_asm_size_type_directives],
+    [OCAML_CC_SAVE_VARIABLES
+
+    # We write the assembly into the .$ac_objext file as AC_COMPILE_IFELSE
+    # assumes an error if such a file doesn't exist after compiling
+    CFLAGS="$CFLAGS -S -o conftest.$ac_objext"
+
+    ocaml_cv_prog_cc_asm_size_type_directives=no
+    AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
+int feat_detect_obj;
+int feat_detect_func(void) {
+  return 42;
+}
+    ]])],
+      [asm_type_obj_directive=no
+      asm_type_func_directive=no
+      asm_size_func_directive=no
+      # We do not look for a .size directive for the object as it is not
+      # generated in that simple case for instance by the compiler
+      # powerpc64le-linux-gnu-gcc 14.2 which emits instead an .lcomm directive
+      AS_IF([$GREP '\.type.*feat_detect_obj' conftest.$ac_objext >/dev/null],
+        [asm_type_obj_directive=yes])
+      AS_IF([$GREP '\.type.*feat_detect_func' conftest.$ac_objext >/dev/null],
+        [asm_type_func_directive=yes])
+      AS_IF([$GREP '\.size.*feat_detect_func' conftest.$ac_objext >/dev/null],
+        [asm_size_func_directive=yes])
+      AS_CASE([m4_join([,],[$asm_type_obj_directive],[$asm_type_func_directive],
+          [$asm_size_func_directive])],
+        [yes,yes,yes],
+          [ocaml_cv_prog_cc_asm_size_type_directives=yes],
+        [no,no,no],
+          [ocaml_cv_prog_cc_asm_size_type_directives=no],
+        [ocaml_cv_prog_cc_asm_size_type_directives=unconclusive])])
+    OCAML_CC_RESTORE_VARIABLES])
+
+  AS_CASE([$ocaml_cv_prog_cc_asm_size_type_directives],
+    [yes],
+      [asm_size_type_directives=true
+      AC_DEFINE([ASM_SIZE_TYPE_DIRECTIVES], [1])],
+    [no],
+      [asm_size_type_directives=false],
+    [AC_MSG_WARN([found inconsistent results for .size and .type directives])
+    asm_size_type_directives=false])
+])
+
 AC_DEFUN([OCAML_CC_SUPPORTS_LABELS_AS_VALUES], [
   AC_CACHE_CHECK([whether $CC supports the labels as values extension],
     [ocaml_cv_prog_cc_labels_as_values],
diff --git a/configure b/configure
index 1735c1178d..d7921b8586 100755
--- a/configure
+++ b/configure
@@ -823,6 +823,7 @@ mkdll_exp
 mkdll
 rpath
 sharedlib_cflags
+asm_size_type_directives
 asm_cfi_supported
 AS
 endianness
@@ -3490,6 +3491,7 @@ LINEAR_MAGIC_NUMBER=Caml1999L035
 
 
 
+
 
 
  # TODO: rename this variable
@@ -3538,6 +3540,7 @@ LINEAR_MAGIC_NUMBER=Caml1999L035
 
 
 
+
 
 
 ## Generated files
@@ -13598,6 +13601,96 @@ else $as_nop
   with_nonexecstack_note=false
 fi
 
+  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if $CC generates .size and .type asm directives" >&5
+printf %s "checking if $CC generates .size and .type asm directives... " >&6; }
+if test ${ocaml_cv_prog_cc_asm_size_type_directives+y}
+then :
+  printf %s "(cached) " >&6
+else $as_nop
+
+  saved_CC="$CC"
+  saved_CFLAGS="$CFLAGS"
+  saved_CPPFLAGS="$CPPFLAGS"
+  saved_LIBS="$LIBS"
+  saved_ac_ext="$ac_ext"
+  saved_ac_compile="$ac_compile"
+  # Move the content of confdefs.h to another file so it does not
+  # get included
+  mv confdefs.h confdefs.h.bak
+  touch confdefs.h
+
+
+    # We write the assembly into the .$ac_objext file as AC_COMPILE_IFELSE
+    # assumes an error if such a file doesn't exist after compiling
+    CFLAGS="$CFLAGS -S -o conftest.$ac_objext"
+
+    ocaml_cv_prog_cc_asm_size_type_directives=no
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int feat_detect_obj;
+int feat_detect_func(void) {
+  return 42;
+}
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"
+then :
+  asm_type_obj_directive=no
+      asm_type_func_directive=no
+      asm_size_func_directive=no
+      # We do not look for a .size directive for the object as it is not
+      # generated in that simple case for instance by the compiler
+      # powerpc64le-linux-gnu-gcc 14.2 which emits instead an .lcomm directive
+      if $GREP '\.type.*feat_detect_obj' conftest.$ac_objext >/dev/null
+then :
+  asm_type_obj_directive=yes
+fi
+      if $GREP '\.type.*feat_detect_func' conftest.$ac_objext >/dev/null
+then :
+  asm_type_func_directive=yes
+fi
+      if $GREP '\.size.*feat_detect_func' conftest.$ac_objext >/dev/null
+then :
+  asm_size_func_directive=yes
+fi
+      case $asm_type_obj_directive,$asm_type_func_directive,$asm_size_func_directive in #(
+  yes,yes,yes) :
+    ocaml_cv_prog_cc_asm_size_type_directives=yes ;; #(
+  no,no,no) :
+    ocaml_cv_prog_cc_asm_size_type_directives=no ;; #(
+  *) :
+    ocaml_cv_prog_cc_asm_size_type_directives=unconclusive ;;
+esac
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
+
+  # Restore the content of confdefs.h
+  mv confdefs.h.bak confdefs.h
+  ac_compile="$saved_ac_compile"
+  ac_ext="$saved_ac_ext"
+  CPPFLAGS="$saved_CPPFLAGS"
+  CFLAGS="$saved_CFLAGS"
+  CC="$saved_CC"
+  LIBS="$saved_LIBS"
+
+fi
+{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ocaml_cv_prog_cc_asm_size_type_directives" >&5
+printf "%s\n" "$ocaml_cv_prog_cc_asm_size_type_directives" >&6; }
+
+  case $ocaml_cv_prog_cc_asm_size_type_directives in #(
+  yes) :
+    asm_size_type_directives=true
+      printf "%s\n" "#define ASM_SIZE_TYPE_DIRECTIVES 1" >>confdefs.h
+ ;; #(
+  no) :
+    asm_size_type_directives=false ;; #(
+  *) :
+    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: found inconsistent results for .size and .type directives" >&5
+printf "%s\n" "$as_me: WARNING: found inconsistent results for .size and .type directives" >&2;}
+    asm_size_type_directives=false ;;
+esac
+
 
 case $host in #(
   sparc-sun-solaris*) :
diff --git a/configure.ac b/configure.ac
index 6cf1dbe353..e1f2e85610 100644
--- a/configure.ac
+++ b/configure.ac
@@ -231,6 +231,7 @@ AC_SUBST([ASPP])
 AC_SUBST([endianness])
 AC_SUBST([AS])
 AC_SUBST([asm_cfi_supported])
+AC_SUBST([asm_size_type_directives])
 AC_SUBST([sharedlib_cflags])
 AC_SUBST([rpath])
 AC_SUBST([mkdll])
@@ -674,6 +675,7 @@ popdef([host_alias])dnl
 popdef([host])dnl
 
 OCAML_WITH_NONEXECSTACK_NOTE
+OCAML_ASM_SIZE_TYPE_DIRECTIVES
 
 AS_CASE([$host],
   [sparc-sun-solaris*],
diff --git a/runtime/caml/m.h.in b/runtime/caml/m.h.in
index 2fcc9e6e2b..d771d26083 100644
--- a/runtime/caml/m.h.in
+++ b/runtime/caml/m.h.in
@@ -64,6 +64,11 @@
 
 #undef ASM_CFI_SUPPORTED
 
+#undef ASM_SIZE_TYPE_DIRECTIVES
+
+/* Define ASM_SIZE_TYPE_DIRECTIVES when the ".size" and ".type" assembler
+   directives can be used */
+
 #undef WITH_FRAME_POINTERS
 
 #define NO_NAKED_POINTERS 1
-- 
2.47.2

