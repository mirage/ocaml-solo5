From d3827762c1226cb09b0b9947b8e148dd2e5f3cf4 Mon Sep 17 00:00:00 2001
From: Samuel Hym <samuel@tarides.com>
Date: Fri, 31 Jan 2025 18:25:06 +0100
Subject: [PATCH 16/21] Detect support for `.size` and `.type` assembler
 directives

Detect during `configure` whether the C compiler generates `.size` and
`.type` assembler directives
Set the result to true if and only if both directives are generated for
functions and the `.type` directive is generated for objects (directives
equivalent to `.size` could be used for a simple `int`); display a
warning if some of the three combinations appear but not all three
Define a macro in `m.h` and a configure variable so that OCaml can do as
cc does
---
 aclocal.m4          |  48 ++++++++++++++++++++++++++++++++++++++++++++
 configure           | Bin 706768 -> 709722 bytes
 configure.ac        |   2 ++
 runtime/caml/m.h.in |   5 +++++
 4 files changed, 55 insertions(+)

diff --git a/aclocal.m4 b/aclocal.m4
index 9c6feb1034..daf2f0ce5e 100644
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -550,6 +550,54 @@ AC_DEFUN([OCAML_WITH_NONEXECSTACK_NOTE],
     [with_nonexecstack_note=false])
 ])
 
+AC_DEFUN([OCAML_ASM_SIZE_TYPE_DIRECTIVES],
+  [AC_REQUIRE([AC_PROG_GREP])dnl
+  AC_CACHE_CHECK([if $CC generates .size and .type asm directives],
+    [ocaml_cv_prog_cc_asm_size_type_directives],
+    [OCAML_CC_SAVE_VARIABLES
+
+    # We write the assembly into the .$ac_objext file as AC_COMPILE_IFELSE
+    # assumes an error if such a file doesn't exist after compiling
+    CFLAGS="$CFLAGS -S -o conftest.$ac_objext"
+
+    ocaml_cv_prog_cc_asm_size_type_directives=no
+    AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
+int feat_detect_obj;
+int feat_detect_func(void) {
+  return 42;
+}
+    ]])],
+      [asm_type_obj_directive=no
+      asm_type_func_directive=no
+      asm_size_func_directive=no
+      # We do not look for a .size directive for the object as it is not
+      # generated in that simple case for instance by the compiler
+      # powerpc64le-linux-gnu-gcc 14.2 which emits instead an .lcomm directive
+      AS_IF([$GREP '\.type.*feat_detect_obj' conftest.$ac_objext >/dev/null],
+        [asm_type_obj_directive=yes])
+      AS_IF([$GREP '\.type.*feat_detect_func' conftest.$ac_objext >/dev/null],
+        [asm_type_func_directive=yes])
+      AS_IF([$GREP '\.size.*feat_detect_func' conftest.$ac_objext >/dev/null],
+        [asm_size_func_directive=yes])
+      AS_CASE([m4_join([,],[$asm_type_obj_directive],[$asm_type_func_directive],
+          [$asm_size_func_directive])],
+        [yes,yes,yes],
+          [ocaml_cv_prog_cc_asm_size_type_directives=yes],
+        [no,no,no],
+          [ocaml_cv_prog_cc_asm_size_type_directives=no],
+        [ocaml_cv_prog_cc_asm_size_type_directives=unconclusive])])
+    OCAML_CC_RESTORE_VARIABLES])
+
+  AS_CASE([$ocaml_cv_prog_cc_asm_size_type_directives],
+    [yes],
+      [asm_size_type_directives=true
+      AC_DEFINE([ASM_SIZE_TYPE_DIRECTIVES], [1])],
+    [no],
+      [asm_size_type_directives=false],
+    [AC_MSG_WARN([found inconsistent results for .size and .type directives])
+    asm_size_type_directives=false])
+])
+
 AC_DEFUN([OCAML_CC_SUPPORTS_LABELS_AS_VALUES], [
   AC_CACHE_CHECK([whether $CC supports the labels as values extension],
     [ocaml_cv_prog_cc_labels_as_values],
diff --git a/configure b/configure
index 1735c1178d1f8c7c322f108c4f0207e6ff2576a1..d7921b85866b3adb0de8a9469b5a3d0966c1516b 100755
GIT binary patch
delta 1614
zcmbW1&rcIU6vtC^3*C!p1Oesn0w|OpO(YFOn;MNaSPupZ(P#|YWp~;RZf7>TTM&ix
zU<?OOjfwLwn3x!D^-8=Oxq4AVIpD>+#`tziTiUb&Hhp`TnfICZzVFTZSRDQIdUWGw
z^0ZB#5XD(BiK0`BXbxQ>&-Rj~y`*nAB!a8H+w1eIKD0Kp6KE$(^Q+PyD&BvVZuNy-
zZ%~;IVHW|aor4NSZ2k84iK}0v;33C^zgL7_wFi69TWJ!GEw*0xBBi&Pz@Sh3+Lk_?
zYjrTjxG2&<;u>WRq>1V%I&m;3g)b~d<;KNyo@v8Noa!NXDg#)=$y*E}6H$3h7TfQn
zZjrjw)>puwJb92&lL&7@7x(AJ;_bV*RtLPSS{)dGdjxb2j5}a({s_|C0u{>I>V-;G
zyk#d#00Y6C@M542P}}v}k7WQdgb_=1hz^v2lT{tCY0fkVXsS&-0%f+NGL68(3Ld}>
zo-?UItSZ9f%fvFZ$%sM54a!pa$Kx56AJ1qST#SS#U^z>*ERY;^FaU%RRmTp1uz{pn
z^~pYureSb88J~fnhhB?>M;hufB#HrFmw3J-bxv2ctk-&l*m9a43FvBkfOxY?Y!JUC
z(ydf|j19;_wfX*q^yD6_-d>l_SZ%!?QQm0MD{e6dhEV_vyD)|y*FtdFlZ0z(&QP=^
z#k6=v(KMwRVEwDMW9S6YXqm+LnD;+6Wfoh%N*Ot}dkhQ2nP%i|95l$0iLGj4dohqK
zb$*l1`_43v{^gw?JtFm83fAOr$gUr*T$qf)nv9~9)jzT@2j#6K)I1Dg3(f*VowJDt
zab@oQOkBB<NXD<vCGN&&g_`U*+t2u+gw37y9`R<kV`?hR^Ef)GtB6hUCE?Vvh@Cg^
zWw|q;ak^F}D~i!8Ha6Q%8UG0&wyV}ebj@p^R;k9)s)0jezechscKf^5&0Pu2kJgUX
LQ8IS}sjq(lgNZ_^

delta 67
zcmcb$Li@r*?F}D-nmL2Fa|SaiX-?OvVf1aUs$m3TCLm@8VwUYyHLQO#+n;@81!6WJ
PW(Q)9?aw}PmOKIg)T$qh

diff --git a/configure.ac b/configure.ac
index 6cf1dbe353..e1f2e85610 100644
--- a/configure.ac
+++ b/configure.ac
@@ -231,6 +231,7 @@ AC_SUBST([ASPP])
 AC_SUBST([endianness])
 AC_SUBST([AS])
 AC_SUBST([asm_cfi_supported])
+AC_SUBST([asm_size_type_directives])
 AC_SUBST([sharedlib_cflags])
 AC_SUBST([rpath])
 AC_SUBST([mkdll])
@@ -674,6 +675,7 @@ popdef([host_alias])dnl
 popdef([host])dnl
 
 OCAML_WITH_NONEXECSTACK_NOTE
+OCAML_ASM_SIZE_TYPE_DIRECTIVES
 
 AS_CASE([$host],
   [sparc-sun-solaris*],
diff --git a/runtime/caml/m.h.in b/runtime/caml/m.h.in
index 2fcc9e6e2b..d771d26083 100644
--- a/runtime/caml/m.h.in
+++ b/runtime/caml/m.h.in
@@ -64,6 +64,11 @@
 
 #undef ASM_CFI_SUPPORTED
 
+#undef ASM_SIZE_TYPE_DIRECTIVES
+
+/* Define ASM_SIZE_TYPE_DIRECTIVES when the ".size" and ".type" assembler
+   directives can be used */
+
 #undef WITH_FRAME_POINTERS
 
 #define NO_NAKED_POINTERS 1
-- 
2.47.2

